using System;
using Verse;

namespace TraderGen.StockGen
{
	/// <summary>
	/// Intended for ideologies with one or more venerated animals.
	/// Should be auto-generated by the TraderGen ideology feature.
	/// Animal amounts on the totalPriceRange attribute and on the animal's market value. 
	/// </summary>
	public class VeneratedAnimals : AnimalMultiDef
	{
		/// <summary>
		/// The number of animals depends on the threshold (smaller for visitors, larger for settlements) and the market
		/// value of the animal itself. Therefore VeneratedAnimals ignores kindCountRange.
		/// </summary>
		/// <param name="pawnDef">Venerated animal.</param>
		/// <returns>Number of venerated animals in stock.</returns>
		protected override int AnimalCount(PawnKindDef pawnDef)
		{
			var marketValue = pawnDef.race.BaseMarketValue;
			var threshold = new FloatRange(-marketValue / (3.0f * totalPriceRange.min),
				Math.Max(totalPriceRange.max / marketValue, 1));
			return (int) Math.Ceiling(threshold.RandomInRange);
		}
	}
}